{"ast":null,"code":"import { API_URL } from \"../../../Config/API_URL\";\nimport axios from \"axios\";\nimport { registerToken } from \"../../../Helpers/API_Helper/RegisterToken\";\nimport Cookies from \"js-cookie\";\nconst API = axios.create({\n  baseURL: API_URL\n});\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\nexport default class CompaniesAPIManager {\n  static async register(email, password) {\n    const response = await API.post(\"/companies\", {\n      company: {\n        email,\n        password\n      }\n    }, config);\n    let token = await response.headers.authorization;\n    console.log(response);\n    token ? registerToken(token) : Cookies.set(\"isLogged?\", \"false\");\n    this.login(email, password);\n    return response;\n  }\n\n  static async logout() {\n    const authorizedConfig = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${Cookies.get(\"API_Authentication_token\")}`\n      }\n    };\n    const response = await API.delete(\"/companies/sign_out\", authorizedConfig);\n    console.log(response);\n    Cookies.remove(\"API_Authentication_token\");\n    return response;\n  }\n\n  static async login(email, password) {\n    const response = await API.post(\"/companies/sign_in\", {\n      user: {\n        email,\n        password\n      }\n    }, config);\n    let token = await response.headers.authorization;\n    console.log(response);\n    token ? registerToken(token) : Cookies.get(\"API_Authentication_token\");\n    return response;\n  }\n\n}","map":{"version":3,"sources":["/Users/benoitfigea/THP-NEXT/STACKER/front_Stacker/src/Services/RailsApi/CompaniesFetch/index.js"],"names":["API_URL","axios","registerToken","Cookies","API","create","baseURL","config","headers","CompaniesAPIManager","register","email","password","response","post","company","token","authorization","console","log","set","login","logout","authorizedConfig","Authorization","get","delete","remove","user"],"mappings":"AAAA,SAASA,OAAT,QAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,2CAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAEN;AAAX,CAAb,CAAZ;AAEA,MAAMO,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AADI,CAAf;AAMA,eAAe,MAAMC,mBAAN,CAA0B;AAClB,eAARC,QAAQ,CAACC,KAAD,EAAQC,QAAR,EAAkB;AACrC,UAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAJ,CACrB,YADqB,EAErB;AAAEC,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAAX,KAFqB,EAGrBL,MAHqB,CAAvB;AAMA,QAAIS,KAAK,GAAG,MAAMH,QAAQ,CAACL,OAAT,CAAiBS,aAAnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEAG,IAAAA,KAAK,GAAGd,aAAa,CAACc,KAAD,CAAhB,GAA0Bb,OAAO,CAACiB,GAAR,CAAY,WAAZ,EAAyB,OAAzB,CAA/B;AACA,SAAKC,KAAL,CAAWV,KAAX,EAAkBC,QAAlB;AACA,WAAOC,QAAP;AACD;;AACkB,eAANS,MAAM,GAAG;AACpB,UAAMC,gBAAgB,GAAG;AACvBf,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPgB,QAAAA,aAAa,EAAG,UAASrB,OAAO,CAACsB,GAAR,CAAY,0BAAZ,CAAwC;AAF1D;AADc,KAAzB;AAMA,UAAMZ,QAAQ,GAAG,MAAMT,GAAG,CAACsB,MAAJ,CAAW,qBAAX,EAAkCH,gBAAlC,CAAvB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAV,IAAAA,OAAO,CAACwB,MAAR,CAAe,0BAAf;AACA,WAAOd,QAAP;AACD;;AAEiB,eAALQ,KAAK,CAACV,KAAD,EAAQC,QAAR,EAAkB;AAClC,UAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAJ,CACrB,oBADqB,EAErB;AAAEc,MAAAA,IAAI,EAAE;AAAEjB,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAAR,KAFqB,EAGrBL,MAHqB,CAAvB;AAMA,QAAIS,KAAK,GAAG,MAAMH,QAAQ,CAACL,OAAT,CAAiBS,aAAnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAG,IAAAA,KAAK,GAAGd,aAAa,CAACc,KAAD,CAAhB,GAA0Bb,OAAO,CAACsB,GAAR,CAAY,0BAAZ,CAA/B;AACA,WAAOZ,QAAP;AACD;;AAvCsC","sourcesContent":["import { API_URL } from \"../../../Config/API_URL\";\nimport axios from \"axios\";\nimport { registerToken } from \"../../../Helpers/API_Helper/RegisterToken\";\nimport Cookies from \"js-cookie\";\n\nconst API = axios.create({ baseURL: API_URL });\n\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nexport default class CompaniesAPIManager {\n  static async register(email, password) {\n    const response = await API.post(\n      \"/companies\",\n      { company: { email, password } },\n      config\n    );\n\n    let token = await response.headers.authorization;\n    console.log(response);\n\n    token ? registerToken(token) : Cookies.set(\"isLogged?\", \"false\");\n    this.login(email, password);\n    return response;\n  }\n  static async logout() {\n    const authorizedConfig = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${Cookies.get(\"API_Authentication_token\")}`,\n      },\n    };\n    const response = await API.delete(\"/companies/sign_out\", authorizedConfig);\n    console.log(response);\n    Cookies.remove(\"API_Authentication_token\");\n    return response;\n  }\n\n  static async login(email, password) {\n    const response = await API.post(\n      \"/companies/sign_in\",\n      { user: { email, password } },\n      config\n    );\n\n    let token = await response.headers.authorization;\n    console.log(response);\n    token ? registerToken(token) : Cookies.get(\"API_Authentication_token\");\n    return response;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}